{"version":3,"file":"static/js/1.chunk.js","sources":["/var/www/osm/clientApp/src/admin/Admin.tsx","/var/www/osm/clientApp/src/admin/Stats.tsx","/var/www/osm/clientApp/src/admin/Wetty.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n// import { AdminWireFrame } from './NavigationRoles'\nimport { E404 } from '../common/Errors'\nimport Wetty from './Wetty'\nimport Stats from './Stats'\n\nexport default function Admin() {\n  return (\n    <Switch>\n      {/* <Route path='/admin/navroles' component={AdminWireFrame} /> */}\n      <Route path='/admin/wetty' component={Wetty} />\n      <Route path='/admin/stats' component={Stats} />\n      <Route component={E404} />\n    </Switch>\n  )\n}\n","import * as React from 'react'\nimport API from '../lib/API'\nimport { Field } from '../common/FormControls/TextField'\nimport { IServerStats } from '../types/server'\nimport { number } from 'prop-types'\n\nexport default function Stats() {\n  const [stats, setStats]: [\n    IServerStats,\n    React.Dispatch<IServerStats>\n  ] = React.useState({\n    os: {\n      cpuCount: 0,\n      architecture: '',\n      openMem: 0,\n      totMem: 0,\n      host: '',\n      OS: '',\n      processMem: {\n        rss: 0,\n        heapTotal: 0,\n        heapUsed: 0,\n        external: 0\n      }\n    },\n    db: {\n      poolLimit: 0,\n      dbName: '',\n      NODE_ENV: '',\n      version: [{}]\n      // version: { VERSION: string }[]\n    }\n  })\n\n  React.useEffect(() => {\n    API.get({ path: '/stats' })\n      .then((serverStats: IServerStats) => {\n        console.log(serverStats)\n        setStats({ ...serverStats, loaded: true })\n      })\n      .catch((err: Error) => {\n        console.error(err)\n      })\n  }, [])\n\n  return (\n    <>\n      {stats && stats.loaded && (\n        <div className='row m-5'>\n          <div className='col' />\n          <div className='col-lg-6 col-md-8 col-sm-11'>\n            <h2>Server Status</h2>\n            <hr />\n            <Field\n              id='cpuCount'\n              name='cpuCount'\n              value={stats.os.host}\n              label='Node Hostname'\n              type='text'\n              readOnly={true}\n            />\n            <Field\n              value={stats.os.OS}\n              label='Operating System'\n              name='os'\n              type='text'\n              readOnly={true}\n            />\n            <Field\n              value={stats.os.cpuCount}\n              label='CPU Count'\n              type='text'\n              name='cpu'\n              readOnly={true}\n            />\n            <Field\n              name='architecture'\n              value={stats.os.architecture}\n              label='Architecture'\n              type='text'\n              readOnly={true}\n            />\n            <Field\n              value={~~(stats.os.openMem / 1e6)}\n              label={\n                'Available Memory (MB) (' +\n                ~~(\n                  (~~(stats.os.openMem / 1e6) / ~~(stats.os.totMem / 1e6)) *\n                  100\n                ) +\n                '%)'\n              }\n              name='open'\n              type='text'\n              readOnly={true}\n            />\n            <Field\n              value={~~(stats.os.processMem.rss / 1e6)}\n              label={\n                'Memory Used By Node (' +\n                ~~(\n                  (~~(stats.os.processMem.rss / 1e6) /\n                    ~~(stats.os.totMem / 1e6)) *\n                  100\n                ) +\n                '%)'\n              }\n              name='used'\n              type='text'\n              readOnly={true}\n            />\n            <Field\n              id='openMem'\n              value={~~(stats.os.totMem / 1e6)}\n              label='Total Memory (MB)'\n              type='text'\n              name='openMem'\n              readOnly={true}\n            />\n            <Field\n              value={stats.db.NODE_ENV}\n              label='Node Environment'\n              type='text'\n              name='env'\n              readOnly={true}\n            />\n\n            <h2>Database Status</h2>\n            <hr />\n            <Field\n              value={stats.db.version[0].VERSION}\n              label='Version'\n              type='text'\n              name='dbVersion'\n              readOnly={true}\n            />\n            <Field\n              value={stats.db.poolLimit}\n              label='Pool Limit'\n              type='text'\n              name='poolLimit'\n              readOnly={true}\n            />\n            <Field\n              value={stats.db.dbName}\n              label='Database Name'\n              type='text'\n              name='dbName'\n              readOnly={true}\n            />\n          </div>\n          <div className='col' />\n        </div>\n      )}\n    </>\n  )\n}\n","import * as React from 'react'\n// import $ from 'jquery'\n\nfunction Wetty() {\n  const wettyHeight =\n    window.innerHeight -\n    ($('nav')[0].clientHeight + $('footer')[0].clientHeight)\n  return (\n    <div className='row'>\n      <div className='col'>\n        <iframe\n          src='/wetty'\n          className='wetty'\n          style={{ height: wettyHeight + 'px' }}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Wetty\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AAIA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAPA;AAcA;AACA;AACA;AACA;AACA;AACA;AALA;AAfA;AAJA;AAAA;AAAA;AACA;AA2BA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAQA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AASA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;AC5JA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;A","sourceRoot":""}