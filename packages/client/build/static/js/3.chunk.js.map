{"version":3,"file":"static/js/3.chunk.js","sources":["/var/www/osm/clientApp/src/home/UserProfile.tsx","/var/www/osm/clientApp/src/home/UserProfileInfo.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Component } from 'react'\nimport API from '../lib/API'\nimport Table from '../common/Table'\nimport Pills from '../common/PillLayout'\n// import $ from 'jquery'\nimport { UserProfileInfo } from './UserProfileInfo'\nimport { SelectField } from '../common/FormControls'\n\n// interface IUserProfileProps {}\n\ninterface IUserProfileState {\n  modifiedFields: string[]\n  fields: any\n  error?: boolean\n  errorMessage?: string\n  mesage?: string\n}\n\nclass UserProfile extends Component<any, any> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      error: false,\n      errorMessage: '',\n      loaded: false,\n      fields: {\n        sys_id: '',\n        username: '',\n        email: '',\n        notificationNonsig: '',\n        userFirstName: '',\n        userLastName: '',\n        phone: '',\n        userDefaultNonsig: '',\n        userPass: 'thisisnotanactualpassword',\n        userPassConfirmation: 'thisisnotanactualpassword'\n      },\n      modifiedFields: [],\n      sys_id: props.id || false,\n      logs: [],\n      logCols: {\n        Time: {\n          boundTo: 'log_time',\n          type: 'Date'\n        },\n        Action: {\n          boundTo: 'log_message',\n          type: 'string'\n        }\n      },\n      customers: []\n    }\n    this.getUser()\n  }\n\n  private handleChange(e) {\n    const fields = { ...this.state.fields }\n    const modifiedFields = this.state.modifiedFields\n    fields[e.target.id] = e.target.value\n    if (modifiedFields.indexOf(e.target.id) === -1) {\n      modifiedFields.push(e.target.id)\n    }\n    this.setState({ fields, modifiedFields })\n  }\n\n  private handleFocus(e) {\n    e.target.select()\n  }\n\n  private getUser() {\n    let apiQ\n    if (this.state.sys_id) {\n      apiQ = API.get({\n        path: '/api/users/profile',\n        query: {\n          sys_id: this.state.sys_id\n        }\n      })\n    } else {\n      apiQ = API.get({ path: '/api/users/me' })\n    }\n    apiQ\n      .then((response) => {\n        if (response.errors) throw response.errors\n        const state = { ...this.state.fields }\n        const customers: any = []\n        if (response && response.data && response.data.customers) {\n          response.data.customers.map((customer) => {\n            customers.push(customer.nsaNonsig)\n          })\n        }\n        if (response.data && response.data.user) {\n          Object.keys(response.data.user[0]).map((field) => {\n            state[field] = response.data.user[field]\n          })\n          state.notificationNonsig = response.data.user.userDefaultNonsig\n        }\n\n        this.setState({\n          fields: state,\n          logs: response.data.logs,\n          loaded: true,\n          customers\n        })\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n  }\n\n  private handleSubmit(e) {\n    const formName = e.target.getAttribute('data-form') || 'profile'\n    const selector = '#' + this.state.modifiedFields.join(', #')\n    const formContext = 'form[name=' + formName + ']'\n    const body = {\n      sys_id: $('#sys_id').val()\n    }\n    $(selector, $(formContext)).each(function(index) {\n      if (this instanceof HTMLInputElement) {\n        body[this.id] = this.value\n      }\n    })\n    API.patch({\n      path: '/api/q/sys_user/' + body.sys_id,\n      body: JSON.stringify(body)\n    }).then((res: any) => {\n      if (res.error) this.setState({ error: true, errorMessage: res.error })\n    })\n  }\n\n  public render() {\n    const pills = {\n      profile: {\n        id: 'profile',\n        label: 'Profile',\n        body: (\n          <UserProfileInfo\n            onChange={this.handleChange.bind(this)}\n            fields={{ ...this.state.fields }}\n            customers={this.state.customers}\n          />\n        )\n      },\n      notifications: {\n        id: 'notifications',\n        label: 'Notifications',\n        body: (\n          <>\n            <h4>Notifications For</h4>\n            {this.state.loaded && (\n              <>\n                <SelectField\n                  id='notificationNonsig'\n                  value={this.state.fields.notificationNonsig}\n                  onChange={this.handleChange.bind(this)}\n                  opts={this.state.customers}\n                />\n                <hr />\n                <form name='notificationPreferences' className='form-row'>\n                  <div className='col-lg-6 col-sm-12 form-group'>\n                    <label htmlFor='invoice'>When I receive an invoice: </label>\n                    <select id='invoice' className='form-control'>\n                      <option>Send an email</option>\n                      <option>Do not email me</option>\n                    </select>\n                  </div>\n                  <div className='col-lg-6 col-sm-12 form-group'>\n                    <label htmlFor='chgbck'>\n                      When I receive a chargeback:{' '}\n                    </label>\n                    <select id='chgbck' className='form-control'>\n                      <option>Send an email</option>\n                      <option>Do not email me</option>\n                    </select>\n                  </div>\n                  <div className='col-lg-6 col-sm-12 form-group'>\n                    <label htmlFor='g86'>When I receive a G86: </label>\n                    <select id='g86' className='form-control'>\n                      <option>Send an email</option>\n                      <option>Do not email me</option>\n                    </select>\n                  </div>\n                  <div className='col-lg-6 col-sm-12 form-group'>\n                    <label htmlFor='fhq'>When I receive a FleetHQ Call: </label>\n                    <select id='fhq' className='form-control'>\n                      <option>Send an email</option>\n                      <option>Do not email me</option>\n                    </select>\n                  </div>\n                  <div className='col-lg-6 col-sm-12 form-group'>\n                    <label htmlFor='doh'>Documents on hold older than </label>\n                    <select id='doh' className='form-control'>\n                      <option>Do not email me</option>\n                      <option>1 Day</option>\n                      <option>5 Days</option>\n                      <option>14 Days</option>\n                      <option>1 Month</option>\n                      <option>3 Months</option>\n                    </select>\n                  </div>\n                  <div className='col-lg-6 col-sm-12 form-group'>\n                    <label htmlFor='news'>When news is released</label>\n                    <select id='news' className='form-control'>\n                      <option>Send an email</option>\n                      <option>Do not email me</option>\n                    </select>\n                  </div>\n                  <button\n                    className='btn btn-primary btn-block submit'\n                    data-form='notificationPreferences'\n                    type='button'\n                  >\n                    Save\n                  </button>\n                </form>\n              </>\n            )}\n          </>\n        )\n      },\n      logs: {\n        id: 'logs',\n        label: 'History',\n        body: (\n          <>\n            <h4> History </h4>\n            <hr />\n            <p> View actions that have been taken on your account </p>\n            {this.state.loaded && (\n              <Table\n                table={'sys_log'}\n                cols={this.state.logCols}\n                rows={this.state.logs}\n                hideActions={true}\n              />\n            )}\n          </>\n        )\n      }\n    }\n    return <>{this.state.loaded && <Pills pills={pills} />}</>\n  }\n}\n\nexport default UserProfile\n","import * as React from 'react'\nimport { Component } from 'react'\nimport { Field, SelectField } from '../common/FormControls'\nimport { Alert } from '../common/Alerts'\nimport API from '../lib/API'\n\nexport class UserProfileInfo extends Component<any, any> {\n  constructor(props: any) {\n    super(props)\n    this.state = { ...props, modifiedFields: [] }\n  }\n\n  private handleChange(e: React.ChangeEvent) {\n    const fields = { ...this.state.fields }\n    const modifiedFields = this.state.modifiedFields\n    if (e.target instanceof HTMLInputElement) {\n      fields[e.target.id] = e.target.value\n      if (modifiedFields.indexOf(e.target.id) === -1) {\n        modifiedFields.push(e.target.id)\n      }\n      this.setState({ fields, modifiedFields })\n    }\n  }\n\n  private handleSubmit(e: React.FormEvent) {\n    if (e.target instanceof HTMLInputElement) {\n      const formName = e.target.getAttribute('data-form') || 'profile'\n      const selector = '#' + this.state.modifiedFields.join(', #')\n      const formContext = 'form[name=' + formName + ']'\n      const body: any = {\n        sys_id: jQuery('#sys_id').val()\n      }\n      $(selector, $(formContext)).each((index) => {\n        if (e.target instanceof HTMLInputElement) {\n          body[e.target.id] = e.target.value\n        }\n      })\n      API.patch({\n        path: '/api/q/sys_user/' + body.sys_id,\n        body\n      }).then((res: any) => {\n        if (res.error) this.setState({ error: true, errorMessage: res.error })\n      })\n    }\n  }\n\n  public render() {\n    return (\n      <>\n        {this.state.error && (\n          <Alert message={this.state.errorMessage} alertType='danger' />\n        )}\n        {this.state.message && (\n          <Alert message={this.state.message} alertType='success' />\n        )}\n        <h4> User Information </h4>\n        <hr />\n        <form className='form-row' name='profile'>\n          <input type='hidden' id='sys_id' value={this.state.fields.sys_id} />\n          <Field\n            id='username'\n            name='username'\n            type='text'\n            label='Username'\n            value={this.state.fields.username}\n            onChange={this.handleChange.bind(this)}\n            className='col-lg-6 col-md-12'\n            attributes={{ readOnly: 'readonly' }}\n          />\n          <Field\n            id='email'\n            name='email'\n            type='text'\n            label='Email'\n            value={this.state.fields.email}\n            onChange={this.handleChange.bind(this)}\n            className='col-lg-6 col-md-12'\n          />\n          <Field\n            id='userFirstName'\n            label='First Name'\n            name='userFirstName'\n            type='text'\n            value={this.state.fields.userFirstName}\n            onChange={this.handleChange.bind(this)}\n            className='col-lg-6 col-md-12'\n          />\n          <Field\n            id='userLastName'\n            label='Last Name'\n            name='userLastName'\n            type='text'\n            value={this.state.fields.userLastName}\n            onChange={this.handleChange.bind(this)}\n            className='col-lg-6 col-md-12'\n          />\n          <Field\n            id='phone'\n            name='phone'\n            type='text'\n            label='Phone Number'\n            value={this.state.fields.phone}\n            onChange={this.handleChange.bind(this)}\n            className='col-lg-6 col-md-12'\n          />\n          <SelectField\n            id='userDefaultNonsig'\n            label='Home Nonsig'\n            value={this.state.fields.userDefaultNonsig}\n            onChange={this.handleChange.bind(this)}\n            className='col-lg-6 col-md-12'\n            opts={this.state.customers}\n          />\n          <Field\n            id='userPass'\n            name='userPass'\n            label='Password'\n            value={this.state.fields.userPass}\n            onChange={this.handleChange.bind(this)}\n            className='col-lg-6 col-md-12'\n            type='password'\n            attributes={{\n              onFocus: (e: React.FocusEvent) => {\n                if (e.target instanceof HTMLInputElement) {\n                  e.target.select()\n                }\n              }\n            }}\n          />\n          <Field\n            id='userPassConfirmation'\n            name='userPassConfirmation'\n            label='Confirm Password'\n            value={this.state.fields.userPassConfirmation}\n            onChange={this.handleChange.bind(this)}\n            className='col-lg-6 col-md-12'\n            type='password'\n            attributes={{\n              onFocus: (e: React.FocusEvent) => {\n                if (e.target instanceof HTMLInputElement) {\n                  e.target.select()\n                }\n              }\n            }}\n          />\n          <button\n            className='btn btn-primary btn-block submit'\n            onClick={this.handleSubmit.bind(this)}\n            data-form='profile'\n            type='button'\n          >\n            Save\n          </button>\n        </form>\n      </>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAUA;AA7BA;AACA;AA8BA;AACA;AAlCA;AAkCA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAWA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhEA;AA6EA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAzFA;AA6GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AA/NA;AACA;AAiOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrPA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;AALA;AAAA;AAAA;AAOA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAhBA;AAAA;AAAA;AAkBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAtCA;AAAA;AAAA;AAyiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAtJA;AACA;AADA;AAAA;;;;A","sourceRoot":""}